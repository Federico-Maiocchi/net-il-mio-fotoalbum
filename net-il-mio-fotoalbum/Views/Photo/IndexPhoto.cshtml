@model List<Photo>
@{
    ViewData["Title"] = "Lista foto";
    Layout = "_CustomLayout";
}

<section class="photos-list text-center">
    <!-- intestazione pagina -->
    <h1>Benvenuto nel tuo album</h1>
    <h3>Lista foto</h3>

    <a class="nav-link text-dark" href="@Url.Action("Create", "Photo")">
        <button class="btn btn-primary">Aggiungi foto</button>
    </a>


    <!-- Campo di ricerca -->
    <div class="my-4">
        <form asp-action="IndexPhoto" method="get" class="form-inline">
            <input type="text" name="filterName" class="form-control mr-2" placeholder="Cerca per titolo..." />
            <button type="submit" class="btn btn-primary">Cerca</button>
        </form>
    </div>

    <div class="container">
        <!-- Tabella di immagini visibili e invisibili -->
        <h3>Tutte le Immagini</h3>
        <table class="table table-striped">
            <thead>
                <tr>
                    <th scope="col">Immagine</th>
                    <th scope="col">Titolo</th>
                    <th scope="col">Descrizione</th>
                    <th scope="col">Visibilità</th>
                    <th scope="col">Azioni</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var itemPhoto in Model)
                {
                    <tr>
                        <td>
                            
                            @if (string.IsNullOrEmpty(itemPhoto.ImgSrc))
                            {
                                    <img src="~/img/ImageNotFound.png" style="width: 100px;" alt="Image not found" />
                            }
                            else
                            {
                                    <img src="@itemPhoto.ImgSrc" style="width: 100px;@(itemPhoto.IsVisible ? "" : "opacity:0.5;")" alt="Immagine di @itemPhoto.Title">
                            }
                            
                        </td>
                        <td>@itemPhoto.Title</td>
                        <td>
                            @if (itemPhoto.Description.Length > 50)
                            {
                                <span title="@itemPhoto.Description">@itemPhoto.Description.Substring(0, 50)...</span>
                            }
                            else
                            {
                                @itemPhoto.Description
                            }
                        </td>
                        <td>
                            @if (itemPhoto.IsVisible)
                            {
                                <button type="button" class="btn btn-success btn-sm" onclick="toggleVisibility(@itemPhoto.Id)">Visibile</button>
                            }
                            else
                            {
                                <button type="button" class="btn btn-danger btn-sm" onclick="toggleVisibility(@itemPhoto.Id)">Invisibile</button>
                            }
                        </td>
                        <td>
                            <a href="@Url.Action("Update", new { id = itemPhoto.Id })" class="btn btn-primary btn-sm">Modifica</a>
                            <form asp-controller="Photo" asp-action="Delete" asp-route-id="@itemPhoto.Id" method="post" style="display:inline;">
                                @Html.AntiForgeryToken()
                                <button type="submit" class="btn btn-danger btn-sm">Cancella</button>
                            </form>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</section>

<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

<script>

    console.log(`Tentativo di trovare l'elemento con id visibilityButton_${photoId}`);

    const visibilityButton = document.getElementById(`visibilityButton_${photoId}`);
    if (visibilityButton) {
        // L'elemento è stato trovato, esegui le operazioni necessarie
        console.log('Elemento trovato:', visibilityButton);
        // Continua con le operazioni su visibilityButton...
    } else {
        // L'elemento non è stato trovato, gestisci il caso di errore
        console.error(`L'elemento con id visibilityButton_${photoId} non è stato trovato.`);
        // Aggiungi qui il codice per gestire l'errore, ad esempio mostrando un messaggio di avviso all'utente
    }
    
    function toggleVisibility(photoId) {
        axios.post(`/api/PhotoWebApi/ToggleVisibility?id=${photoId}`)
            .then(response => {
                console.log('Chiamata POST riuscita:', response.data);

                // Aggiorna il bottone di visibilità
                const visibilityButton = document.getElementById(`visibilityButton_${photoId}`);
                const isVisible = response.data.isVisible;

                // Cambia il testo e lo stile del bottone in base alla nuova visibilità
                visibilityButton.textContent = isVisible ? "Visibile" : "Invisibile";
                visibilityButton.classList.toggle('btn-success', isVisible);
                visibilityButton.classList.toggle('btn-danger', !isVisible);
            })
            .catch(error => {
                console.error('Errore durante la chiamata POST:', error);
                // Gestisci gli errori, se necessario
            });
    }
</script>
